DROP DATABASE IF EXISTS c45autoloop; CREATE DATABASE c45autoloop; USE c45autoloop; CREATE TABLE tblData( nourut INT,outlook VARCHAR(10),temperature VARCHAR(10),humadity VARCHAR(10),windy VARCHAR(10),play VARCHAR(10));load data local infile "dbC45.csv" into table tblData fields terminated by ";" enclosed by '''' ignore 1 lines;CREATE TABLE tblHitung( iterasi INT,atribut VARCHAR(20),informasi VARCHAR(100),jumlahdata INT, playno INT, playyes INT, entropy DECIMAL(8,4), gain DECIMAL(8,4) );
CREATE TABLE tblHitungSementara( iterasi INT, atribut VARCHAR(20), informasi VARCHAR(20), jumlahdata INT, playno INT, playyes INT, entropy DECIMAL(8,4), splitgain DECIMAL(8,4), gain DECIMAL(8,4) ); CREATE TABLE tblTree( iterasi INT, outlook varchar(20), temperature varchar(20), humadity varchar(20), windy varchar(20), play varchar(20) ); INSERT INTO tblTree VALUES (0, "","","",'',"lanjut"); DELIMITER $$ CREATE PROCEDURE spRunning() BEGIN DECLARE vIterasi, vLoop INT DEFAULT 0;
DECLARE vJumlahLanjut INT DEFAULT 1; WHILE vJumlahLanjut <> 0 DO SELECT vIterasi+1 AS looping; call spLooping(vIterasi);SET vIterasi=(SELECT max(iterasi)FROM tblTree);SELECT COUNT(*) INTO vJumlahLanjut FROM tblTree WHERE play='lanjut' and iterasi=(SELECT max(iterasi)FROM tblTree);SELECT vIterasi as loopKe, vJumlahLanjut as JumlahLanjut;SELECT "" AS "-------------------------------------------------------------------------------------------------------------------"; END WHILE; END $$ DELIMITER ;
DELIMITER $$ CREATE PROCEDURE spLooping(pIterasi INT) BEGIN DECLARE vIterasi, vJumlahData, i INT DEFAULT 0; DECLARE vOutlook, vTemperature, vHumadity, vWindy, vPlay varchar(20); DECLARE cTblTree CURSOR FOR SELECT * FROM tblTree WHERE iterasi=pIterasi; SELECT COUNT(*) INTO vJumlahData FROM TblTree WHERE iterasi=pIterasi; OPEN cTblTree; WHILE i <> vJumlahData DO FETCH cTblTree INTO vIterasi, vOutlook, vTemperature, vHumadity, vWindy, vPlay; IF vPlay='lanjut' THEN DROP VIEW IF EXISTS vwTblData; CREATE VIEW vwTblData AS SELECT * FROM tblData; call spDelete(vIterasi, vOutlook, vTemperature, vHumadity, vWindy, vPlay); SELECT * FROM vwTblData; call spInsertTblHitungSementara(pIterasi); call spDeleteTblHitungSementara(vIterasi, vOutlook, vTemperature, vHumadity, vWindy, vPlay); call spGain(pIterasi); call spInsertTblHitung(vIterasi, vOutlook, vTemperature, vHumadity, vWindy, vPlay);
SELECT * FROM tblHitungSementara; SELECT * FROM tblGain;  call spInsertTblTree(vIterasi, vOutlook, vTemperature, vHumadity, vWindy, vPlay); SELECT * FROM tblHitung; SELECT * FROM tblTree; END IF; /*END FROM IF vPlay='lanjut'*/ SET i=i+1; END WHILE; CLOSE cTblTree; END $$ DELIMITER ; DELIMITER $$ CREATE PROCEDURE spDelete(pIterasi INT,pOutlook varchar(20),pTemperature varchar(20),pHumadity varchar(20),pWindy varchar(20),pPlay varchar(20))
BEGIN IF pOutlook!="" THEN DELETE FROM vwTblData WHERE outlook!=pOutlook;END IF;IF pTemperature!="" THEN DELETE FROM vwTblData WHERE temperature!=pTemperature;END IF;IF pHumadity!="" THEN DELETE FROM vwTblData WHERE humadity!=pHumadity;END IF;IF pWindy!="" THEN DELETE FROM vwTblData WHERE windy!=pWindy;END IF; END $$ DELIMITER ; DELIMITER $$ CREATE PROCEDURE spInsertTblHitungSementara(pIterasi INT) BEGIN DECLARE i, vJumlahTblData INT DEFAULT 0; DECLARE pJumlahData, pPlayno, pPlayyes INT; SET pIterasi=pIterasi+1; TRUNCATE TABLE tblHitungSementara; INSERT INTO tblHitungSementara(jumlahdata, playno, playyes) VALUES( (SELECT COUNT(*) FROM vwTblData), (SELECT COUNT(*) FROM vwTblData WHERE  play = 'No'), (SELECT COUNT(*) FROM vwTblData WHERE  play = 'Yes') );
INSERT INTO tblHitungSementara(informasi, iterasi, atribut,  jumlahdata, playno, playyes) SELECT DISTINCT(A.outlook), pIterasi, 'Outlook', (SELECT COUNT(*) FROM vwTblData WHERE  outlook = A.outlook), (SELECT COUNT(*) FROM vwTblData WHERE  outlook = A.outlook AND play = 'No'), (SELECT COUNT(*) FROM vwTblData WHERE  outlook = A.outlook AND play = 'Yes') FROM vwTblData AS A ORDER BY A.outlook; INSERT INTO tblHitungSementara(informasi, iterasi, atribut,  jumlahdata, playno, playyes)
SELECT DISTINCT(A.temperature), pIterasi, 'Temperature', (SELECT COUNT(*) FROM vwTblData WHERE  temperature = A.temperature), (SELECT COUNT(*) FROM vwTblData WHERE  temperature = A.temperature AND play = 'No'), (SELECT COUNT(*) FROM vwTblData WHERE  temperature = A.temperature AND play = 'Yes') FROM vwTblData AS A ORDER BY A.temperature; INSERT INTO tblHitungSementara(informasi, iterasi, atribut,  jumlahdata, playno, playyes) SELECT DISTINCT(A.humadity), pIterasi, 'Humadity',
(SELECT COUNT(*) FROM vwTblData WHERE  humadity = A.humadity), (SELECT COUNT(*) FROM vwTblData WHERE  humadity = A.humadity AND play = 'No'), (SELECT COUNT(*) FROM vwTblData WHERE  humadity = A.humadity AND play = 'Yes') FROM vwTblData AS A ORDER BY A.humadity; INSERT INTO tblHitungSementara(informasi, iterasi, atribut,  jumlahdata, playno, playyes) SELECT DISTINCT(A.windy), pIterasi, 'Windy', (SELECT COUNT(*) FROM vwTblData WHERE  windy = A.windy), (SELECT COUNT(*) FROM vwTblData
WHERE  windy = A.windy AND play = 'No'), (SELECT COUNT(*) FROM vwTblData WHERE  windy = A.windy AND play = 'Yes') FROM vwTblData AS A ORDER BY A.windy; UPDATE tblHitungSementara SET entropy=(-(playno/jumlahdata) * log2(playno/jumlahdata)) + (-(playyes/jumlahdata) * log2(playyes/jumlahdata)); UPDATE tblHitungSementara SET entropy=0 WHERE entropy IS NULL; UPDATE tblHitungSementara SET splitgain=((jumlahdata/(SELECT jumlahdata FROM tblHitungSementara WHERE iterasi IS NULL))*entropy);
UPDATE tblHitungSementara SET splitgain=0 WHERE splitgain IS NULL; END $$ DELIMITER ; DELIMITER $$ CREATE PROCEDURE spDeleteTblHitungSementara(pIterasi INT, pOutlook varchar(20), pTemperature varchar(20), pHumadity varchar(20), pWindy varchar(20), pPlay varchar(20)) BEGIN IF pOutlook!="" THEN DELETE FROM tblHitungSementara WHERE atribut = "Outlook"; END IF; IF pTemperature!="" THEN DELETE FROM tblHitungSementara WHERE atribut = "Temperature" ; END IF; IF pHumadity!="" THEN
DELETE FROM tblHitungSementara WHERE atribut = "Humadity" ; END IF; IF pWindy!="" THEN DELETE FROM tblHitungSementara WHERE atribut = "Windy" ; END IF; END $$ DELIMITER ; DELIMITER $$ CREATE PROCEDURE spGain(pIterasi INT) BEGIN SET pIterasi=pIterasi+1; DROP TABLE IF EXISTS tblGain; CREATE TABLE tblGain( atribut varchar(20), gain DECIMAL(8,4) ); INSERT INTO tblGain SELECT atribut, ROUND((SELECT entropy FROM tblHitungSementara WHERE iterasi IS NULL)-sum(splitgain),4)
FROM tblHitungSementara GROUP BY atribut; DELETE FROM tblGain WHERE atribut IS NULL; UPDATE tblHitungSementara SET gain=(SELECT gain FROM tblGain WHERE atribut='outlook') WHERE atribut='outlook'; UPDATE tblHitungSementara SET gain=(SELECT gain FROM tblGain WHERE atribut='humadity') WHERE atribut='humadity'; UPDATE tblHitungSementara SET gain=(SELECT gain FROM tblGain WHERE atribut='temperature') WHERE atribut='temperature'; UPDATE tblHitungSementara SET gain=(SELECT gain FROM tblGain
WHERE atribut='windy') WHERE atribut='windy'; UPDATE tblHitungSementara set splitgain=0 WHERE iterasi is NULL; UPDATE tblHitungSementara set gain=0 WHERE iterasi is NULL; UPDATE tblHitungSementara set informasi='' WHERE iterasi is NULL; UPDATE tblHitungSementara set atribut='' WHERE iterasi is NULL; UPDATE tblHitungSementara set iterasi=pIterasi WHERE iterasi is NULL; END $$ DELIMITER ;
DELIMITER $$ CREATE PROCEDURE spInsertTblHitung(pIterasi INT, pOutlook varchar(20), pTemperature varchar(20), pHumadity varchar(20), pWindy varchar(20), pPlay varchar(20)) BEGIN DECLARE vIterasi, vJumlahData, vPlayno, vPlayyes, i, vJumlahTblHitungSementara INT DEFAULT 0; DECLARE vConcatInformasi varchar(100) DEFAULT "  "; DECLARE vAtribut, vInformasi varchar(20); DECLARE vEntropy, vGain DECIMAL(8,4);
DECLARE cTblHitungSementara CURSOR FOR SELECT iterasi, atribut, informasi, jumlahdata, playno, playyes, entropy, gain FROM tblHitungSementara; SELECT COUNT(*) INTO vJumlahTblHitungSementara FROM tblHitungSementara; IF pOutlook!="" THEN SET vConcatInformasi=CONCAT(vConcatInformasi, pOutlook, ", "); END IF; IF pTemperature!="" THEN SET vConcatInformasi=CONCAT(vConcatInformasi, pTemperature, ", "); END IF; IF pHumadity!="" THEN SET vConcatInformasi=CONCAT(vConcatInformasi, pHumadity, ", ");
END IF; IF pWindy!="" THEN SET vConcatInformasi=CONCAT(vConcatInformasi, pWindy, ", "); END IF; SET vConcatInformasi=SUBSTRING(vConcatInformasi, 1, LENGTH(vConcatInformasi)-2); OPEN cTblHitungSementara; WHILE i <> vJumlahTblHitungSementara DO FETCH cTblHitungSementara INTO vIterasi, vAtribut, vInformasi, vJumlahData, vPlayno, vPlayyes, vEntropy, vGain; IF vAtribut = "" THEN INSERT INTO tblHitung VALUES (vIterasi, "  Filter :", vConcatInformasi, vJumlahData, vPlayno, vPlayyes, vEntropy, vGain);  ELSE INSERT INTO tblHitung VALUES (vIterasi, vAtribut, vInformasi, vJumlahData, vPlayno, vPlayyes, vEntropy, vGain); END IF; SET i=i+1; END WHILE; CLOSE cTblHitungSementara; END $$ DELIMITER ; DELIMITER $$ CREATE PROCEDURE spInsertTblTree(pIterasi INT, pOutlook varchar(20), pTemperature varchar(20), pHumadity varchar(20), pWindy varchar(20), pPlay varchar(20)) BEGIN
DECLARE vIterasi, vJumlahData, vPlayno, vPlayyes, vJumlahTblHitungSementara, i INT DEFAULT 0; DECLARE vAtribut, vInformasi varchar(20); DECLARE vEntropy, vSplitGain, vGain DECIMAL(8,4); DECLARE cTblHitungSementara CURSOR FOR SELECT * FROM tblHitungSementara WHERE gain=(SELECT max(gain) FROM tblHitungSementara); SELECT COUNT(*) INTO vJumlahTblHitungSementara FROM  tblHitungSementara WHERE gain=(SELECT max(gain) FROM tblHitungSementara); SET pIterasi=pIterasi+1;
OPEN cTblHitungSementara; WHILE i <> vJumlahTblHitungSementara and vJumlahTblHitungSementara != 0 DO FETCH cTblHitungSementara INTO vIterasi, vAtribut, vInformasi, vJumlahData, vPlayno, vPlayyes, vEntropy, vSplitGain, vGain; IF vJumlahData = 0 THEN INSERT INTO tblTree VALUES(vIterasi, pOutlook, pTemperature, pHumadity, pWindy, '    No Data');
ELSE  IF vAtribut='Outlook' THEN IF vJumlahData=vPlayno THEN INSERT INTO tblTree VALUES(vIterasi, vInformasi, pTemperature, pHumadity, pWindy, '         NO'); ELSEIF vJumlahData=vPlayyes THEN INSERT INTO tblTree VALUES(vIterasi, vInformasi, pTemperature, pHumadity, pWindy, '        YES'); ELSE INSERT INTO tblTree VALUES(vIterasi, vInformasi, pTemperature, pHumadity, pWindy, 'lanjut'); END IF; END IF; IF vAtribut='Temperature' THEN IF vJumlahData=vPlayno THEN
INSERT INTO tblTree VALUES(vIterasi, pOutlook, vInformasi, pHumadity, pWindy, '         NO');  ELSEIF vJumlahData=vPlayyes THEN INSERT INTO tblTree VALUES(vIterasi, pOutlook, vInformasi, pHumadity, pWindy, '        YES'); ELSE INSERT INTO tblTree VALUES(vIterasi, pOutlook, vInformasi, pHumadity, pWindy, 'lanjut'); END IF; END IF; IF vAtribut='Humadity' THEN IF vJumlahData=vPlayno THEN INSERT INTO tblTree VALUES(vIterasi, pOutlook, pTemperature, vInformasi, pWindy, '         NO');
ELSEIF vJumlahData=vPlayyes THEN INSERT INTO tblTree VALUES(vIterasi, pOutlook, pTemperature, vInformasi, pWindy, '        YES'); ELSE INSERT INTO tblTree VALUES(vIterasi, pOutlook, pTemperature, vInformasi, pWindy, 'lanjut'); END IF; END IF; IF vAtribut='Windy' THEN IF vJumlahData=vPlayno THEN INSERT INTO tblTree VALUES(vIterasi, pOutlook, pTemperature, pHumadity, vInformasi, '         NO'); ELSEIF vJumlahData=vPlayyes THEN INSERT INTO tblTree
VALUES(vIterasi, pOutlook, pTemperature, pHumadity, vInformasi, '        YES'); ELSE INSERT INTO tblTree VALUES(vIterasi, pOutlook, pTemperature, pHumadity, vInformasi, 'lanjut'); END IF; END IF; END IF; /* END FROM IF vJumlahData = 0*/ DELETE FROM tblTree WHERE iterasi=0; SET i=i+1; END WHILE; CLOSE cTblHitungSementara; END $$ DELIMITER ; call spRunning();
